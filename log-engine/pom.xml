<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>log-engine</artifactId>
	<packaging>jar</packaging>

	<parent>
		<groupId>cn.segema</groupId>
		<artifactId>log-analysis</artifactId>
		<version>1.0.0</version>
	</parent>

	<dependencies>
		<!-- 响应式编程 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<!-- commons-io -->
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>2.6</version>
		</dependency>
		
		<dependency>
			<groupId>cn.segema</groupId>
			<artifactId>log-plugin-api</artifactId>
			<version>1.0.0</version>
		</dependency>
		
		<!-- <dependency>
			<groupId>cn.segema</groupId>
			<artifactId>log-plugin-mysql</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>cn.segema</groupId>
			<artifactId>log-plugin-syslog</artifactId>
			<version>1.0.0</version>
		</dependency> -->

	</dependencies>

	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<!-- 指定静态资源的路径 -->
									<directory>src/main/resources</directory>
									<!-- 指定需要复制的文件 -->
									<includes>
										<include>*.*</include>
										<include>static/**</include>
										<include>templates/**</include>
									</includes>
									<!-- 指定不需要复制的文件 -->
									<excludes>
										<exclude>META-INF/**</exclude>
									</excludes>
								</resource>
							</resources>
							<!-- 指定复制到该目录下 -->
							<outputDirectory>${project.build.directory}/config</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>cn.segema.learn.loganalysis.engine.EngineApplication</mainClass>
				</configuration>
			</plugin>
			<!-- java编译插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- 打包jar文件时，配置manifest文件，加入lib包的jar依赖 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<!-- 把target/classes/下的文件导入到jar内 -->
					<classesDirectory>target/classes/</classesDirectory>
					<finalName>${project.artifactId}-${project.version}</finalName>
					<archive>
						<manifest>
							<!-- 指定程序入口 -->
							<mainClass>cn.segema.learn.loganalysis.engine.EngineApplication</mainClass>
							<!-- 打包时 MANIFEST.MF文件不记录的时间戳版本 -->
							<useUniqueVersions>false</useUniqueVersions>
							<addClasspath>true</addClasspath>
							<!-- 服务依赖的jar包放在lib目录下 -->
							<classpathPrefix>lib/</classpathPrefix>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
					<!-- 指定不需要复制的文件 -->
					<!-- <excludes>
						<exclude>META-INF/**</exclude>
					</excludes> -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- <includeScope>compile</includeScope> -->
							<type>jar</type>
							<includeTypes>jar</includeTypes>
							<!-- 存放服务依赖的jar包，存放在服务相同目录的lib文件夹下 -->
							<outputDirectory>
								${project.build.directory}/lib
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

</project>
